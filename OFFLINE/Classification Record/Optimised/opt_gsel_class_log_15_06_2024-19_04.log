INFO:Classification: Started
INFO:Classification: Attempting to open file
INFO:Classification: File opened
INFO:Classification: Importing data...
INFO:Classification: select flag enabled
INFO:Classification: Gestures Selected ['asl for 1', 'asl for 2', 'asl for 3', 'asl for 5']
INFO:Classification: No. Training Samples: 320
INFO:Classification: No. Testing Samples: 80
INFO:Classification: Test Set, Class Sample Distribution: [20, 20, 20, 20]
INFO:Classification: Optimised Process
INFO:Classification: Out of the previously selected models, we keep all the
models within one standard deviation of the highest recall model:
INFO:Classification: precision: 0.741 (±0.079),
 recall: 0.741 (±0.079),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 4}
INFO:Classification: precision: 0.741 (±0.079),
 recall: 0.741 (±0.079),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 5}
INFO:Classification: precision: 0.784 (±0.088),
 recall: 0.784 (±0.088),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 6}
INFO:Classification: precision: 0.803 (±0.087),
 recall: 0.803 (±0.087),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 7}
INFO:Classification: precision: 0.791 (±0.093),
 recall: 0.791 (±0.093),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 8}
INFO:Classification: precision: 0.794 (±0.084),
 recall: 0.794 (±0.084),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 9}
INFO:Classification: precision: 0.822 (±0.067),
 recall: 0.822 (±0.067),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 10}
INFO:Classification: precision: 0.819 (±0.072),
 recall: 0.819 (±0.072),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 11}
INFO:Classification: precision: 0.812 (±0.061),
 recall: 0.812 (±0.061),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 12}
INFO:Classification: precision: 0.800 (±0.067),
 recall: 0.800 (±0.067),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 13}
INFO:Classification: precision: 0.797 (±0.053),
 recall: 0.797 (±0.053),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 14}
INFO:Classification: precision: 0.809 (±0.062),
 recall: 0.809 (±0.062),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 15}
INFO:Classification: precision: 0.744 (±0.085),
 recall: 0.744 (±0.085),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 4}
INFO:Classification: precision: 0.750 (±0.078),
 recall: 0.750 (±0.078),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 5}
INFO:Classification: precision: 0.772 (±0.083),
 recall: 0.772 (±0.083),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 6}
INFO:Classification: precision: 0.762 (±0.077),
 recall: 0.762 (±0.077),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 7}
INFO:Classification: precision: 0.766 (±0.073),
 recall: 0.766 (±0.073),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 8}
INFO:Classification: precision: 0.781 (±0.067),
 recall: 0.781 (±0.067),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 9}
INFO:Classification: precision: 0.775 (±0.062),
 recall: 0.775 (±0.062),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 10}
INFO:Classification: precision: 0.778 (±0.065),
 recall: 0.778 (±0.065),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 11}
INFO:Classification: precision: 0.781 (±0.071),
 recall: 0.781 (±0.071),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 12}
INFO:Classification: precision: 0.806 (±0.057),
 recall: 0.806 (±0.057),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 13}
INFO:Classification: precision: 0.800 (±0.056),
 recall: 0.800 (±0.056),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 14}
INFO:Classification: precision: 0.812 (±0.070),
 recall: 0.812 (±0.070),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 15}
INFO:Classification: precision: 0.753 (±0.081),
 recall: 0.753 (±0.081),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 4}
INFO:Classification: precision: 0.759 (±0.063),
 recall: 0.759 (±0.063),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 5}
INFO:Classification: precision: 0.772 (±0.050),
 recall: 0.772 (±0.050),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 6}
INFO:Classification: precision: 0.772 (±0.059),
 recall: 0.772 (±0.059),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 7}
INFO:Classification: precision: 0.766 (±0.053),
 recall: 0.766 (±0.053),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 8}
INFO:Classification: precision: 0.769 (±0.066),
 recall: 0.769 (±0.066),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 9}
INFO:Classification: precision: 0.778 (±0.069),
 recall: 0.778 (±0.069),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 10}
INFO:Classification: precision: 0.787 (±0.064),
 recall: 0.787 (±0.064),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 11}
INFO:Classification: precision: 0.778 (±0.069),
 recall: 0.778 (±0.069),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 12}
INFO:Classification: precision: 0.784 (±0.065),
 recall: 0.784 (±0.065),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 13}
INFO:Classification: precision: 0.797 (±0.067),
 recall: 0.797 (±0.067),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 14}
INFO:Classification: precision: 0.787 (±0.071),
 recall: 0.787 (±0.071),
 for {'selector__direction': 'forward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 15}
INFO:Classification: precision: 0.747 (±0.071),
 recall: 0.747 (±0.071),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 4}
INFO:Classification: precision: 0.766 (±0.067),
 recall: 0.766 (±0.067),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 5}
INFO:Classification: precision: 0.759 (±0.077),
 recall: 0.759 (±0.077),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 6}
INFO:Classification: precision: 0.762 (±0.053),
 recall: 0.762 (±0.053),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 7}
INFO:Classification: precision: 0.766 (±0.073),
 recall: 0.766 (±0.073),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 8}
INFO:Classification: precision: 0.781 (±0.071),
 recall: 0.781 (±0.071),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 9}
INFO:Classification: precision: 0.791 (±0.067),
 recall: 0.791 (±0.067),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 10}
INFO:Classification: precision: 0.794 (±0.066),
 recall: 0.794 (±0.066),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 11}
INFO:Classification: precision: 0.809 (±0.060),
 recall: 0.809 (±0.060),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 12}
INFO:Classification: precision: 0.806 (±0.070),
 recall: 0.806 (±0.070),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 13}
INFO:Classification: precision: 0.809 (±0.071),
 recall: 0.809 (±0.071),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 14}
INFO:Classification: precision: 0.809 (±0.062),
 recall: 0.809 (±0.062),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 15}
INFO:Classification: precision: 0.744 (±0.064),
 recall: 0.744 (±0.064),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 4}
INFO:Classification: precision: 0.738 (±0.061),
 recall: 0.738 (±0.061),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 5}
INFO:Classification: precision: 0.775 (±0.071),
 recall: 0.775 (±0.071),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 6}
INFO:Classification: precision: 0.775 (±0.071),
 recall: 0.775 (±0.071),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 7}
INFO:Classification: precision: 0.772 (±0.064),
 recall: 0.772 (±0.064),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 8}
INFO:Classification: precision: 0.791 (±0.061),
 recall: 0.791 (±0.061),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 9}
INFO:Classification: precision: 0.781 (±0.066),
 recall: 0.781 (±0.066),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 10}
INFO:Classification: precision: 0.778 (±0.073),
 recall: 0.778 (±0.073),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 11}
INFO:Classification: precision: 0.797 (±0.061),
 recall: 0.797 (±0.061),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 12}
INFO:Classification: precision: 0.806 (±0.052),
 recall: 0.806 (±0.052),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 13}
INFO:Classification: precision: 0.794 (±0.054),
 recall: 0.794 (±0.054),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 14}
INFO:Classification: precision: 0.812 (±0.068),
 recall: 0.812 (±0.068),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 15}
INFO:Classification: precision: 0.744 (±0.068),
 recall: 0.744 (±0.068),
 for {'selector__direction': 'backward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 5}
INFO:Classification: precision: 0.741 (±0.059),
 recall: 0.741 (±0.059),
 for {'selector__direction': 'backward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 6}
INFO:Classification: precision: 0.753 (±0.047),
 recall: 0.753 (±0.047),
 for {'selector__direction': 'backward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 7}
INFO:Classification: precision: 0.744 (±0.059),
 recall: 0.744 (±0.059),
 for {'selector__direction': 'backward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 8}
INFO:Classification: precision: 0.753 (±0.045),
 recall: 0.753 (±0.045),
 for {'selector__direction': 'backward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 11}
INFO:Classification: precision: 0.759 (±0.054),
 recall: 0.759 (±0.054),
 for {'selector__direction': 'backward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 12}
INFO:Classification: precision: 0.759 (±0.054),
 recall: 0.759 (±0.054),
 for {'selector__direction': 'backward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 13}
INFO:Classification: precision: 0.784 (±0.065),
 recall: 0.784 (±0.065),
 for {'selector__direction': 'backward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 14}
INFO:Classification: precision: 0.766 (±0.056),
 recall: 0.766 (±0.056),
 for {'selector__direction': 'backward', 'selector__estimator': ComplementNB(), 'selector__n_features_to_select': 15}
INFO:Classification: 
The selected final model is the one with the highest recall and precision.
Selected Model:
mean_score_time                                                       0.002065
mean_test_recall_micro                                                0.821875
std_test_recall_micro                                                 0.067097
mean_test_precision_micro                                             0.821875
std_test_precision_micro                                              0.067097
rank_test_recall_micro                                                       1
rank_test_precision_micro                                                    1
params                       {'selector__direction': 'forward', 'selector__...
Name: 9, dtype: object
INFO:Classification: Feature Selection Duration: ~12 minutes
INFO:Classification: Optimal Features: ['ch0_mav', 'ch1_mav', 'ch0_rms', 'ch0_wl', 'ch1_wl', 'ch0_zc', 'ch1_wa', 'ch1_hj_a', 'ch0_hj_m', 'ch0_hj_c']
INFO:Classification: Out of the previously selected models, we keep all the
models within one standard deviation of the highest recall model:
INFO:Classification: precision: 0.825 (±0.084),
 recall: 0.825 (±0.084),
 for {'classifier': SVC(), 'classifier__C': 1.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 'scale', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.825 (±0.084),
 recall: 0.825 (±0.084),
 for {'classifier': SVC(), 'classifier__C': 1.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 'scale', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.784 (±0.068),
 recall: 0.784 (±0.068),
 for {'classifier': SVC(), 'classifier__C': 10.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 'scale', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.784 (±0.068),
 recall: 0.784 (±0.068),
 for {'classifier': SVC(), 'classifier__C': 10.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 'scale', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'auto', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'ball_tree', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'kd_tree', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 10, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 20, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 30, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 40, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.051),
 recall: 0.784 (±0.051),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'uniform'}
INFO:Classification: precision: 0.794 (±0.064),
 recall: 0.794 (±0.064),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 7, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.800 (±0.058),
 recall: 0.800 (±0.058),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 9, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.784 (±0.060),
 recall: 0.784 (±0.060),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 11, 'classifier__p': 1, 'classifier__weights': 'distance'}
INFO:Classification: precision: 0.787 (±0.062),
 recall: 0.787 (±0.062),
 for {'classifier': KNeighborsClassifier(), 'classifier__algorithm': 'brute', 'classifier__leaf_size': 50, 'classifier__metric': 'minkowski', 'classifier__n_neighbors': 13, 'classifier__p': 2, 'classifier__weights': 'distance'}
INFO:Classification: 
The selected final model is the one with the highest recall and precision.
Selected Model:
mean_score_time                                                       0.002521
mean_test_recall_micro                                                   0.825
std_test_recall_micro                                                 0.084085
mean_test_precision_micro                                                0.825
std_test_precision_micro                                              0.084085
rank_test_recall_micro                                                       1
rank_test_precision_micro                                                    1
params                       {'classifier': SVC(), 'classifier__C': 1.0, 'c...
Name: 48, dtype: object
INFO:Classification: Model + Hyperparameter Selection Duration: ~1 minutes
INFO:Classification: Best estimator: Pipeline(steps=[('classifier', SVC())], verbose=True)
INFO:Classification: Best params: {'memory': None, 'steps': [('classifier', SVC())], 'verbose': True, 'classifier': SVC(), 'classifier__C': 1.0, 'classifier__break_ties': False, 'classifier__cache_size': 200, 'classifier__class_weight': None, 'classifier__coef0': 0.0, 'classifier__decision_function_shape': 'ovr', 'classifier__degree': 3, 'classifier__gamma': 'scale', 'classifier__kernel': 'rbf', 'classifier__max_iter': -1, 'classifier__probability': False, 'classifier__random_state': None, 'classifier__shrinking': True, 'classifier__tol': 0.001, 'classifier__verbose': False}
INFO:Classification:
              precision    recall  f1-score   support

           0       0.95      1.00      0.98        20
           1       0.85      0.85      0.85        20
           2       0.84      0.80      0.82        20
           4       0.80      0.80      0.80        20

    accuracy                           0.86        80
   macro avg       0.86      0.86      0.86        80
weighted avg       0.86      0.86      0.86        80

INFO:Classification: Overall Accuracy 86.25%
INFO:Classification: Finished

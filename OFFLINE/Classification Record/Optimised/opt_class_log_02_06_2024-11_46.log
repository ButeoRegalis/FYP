INFO:Classification: Started
INFO:Classification: Attempting to open file
INFO:Classification: File opened
INFO:Classification: Importing data...
INFO:Classification: No. Training Samples: 400
INFO:Classification: No. Testing Samples: 100
INFO:Classification: Test Set, Class Sample Distribution: [20, 20, 20, 20, 20]
INFO:Classification: Optimised Process
INFO:Classification: Out of the previously selected models, we keep all the
models within one standard deviation of the highest recall model:
INFO:Classification: precision: 0.443 (±0.068),
 recall: 0.443 (±0.068),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 3}
INFO:Classification: precision: 0.453 (±0.077),
 recall: 0.453 (±0.077),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 5}
INFO:Classification: precision: 0.450 (±0.081),
 recall: 0.450 (±0.081),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 6}
INFO:Classification: precision: 0.460 (±0.064),
 recall: 0.460 (±0.064),
 for {'selector__direction': 'forward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 7}
INFO:Classification: precision: 0.468 (±0.065),
 recall: 0.468 (±0.065),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 6}
INFO:Classification: precision: 0.467 (±0.049),
 recall: 0.467 (±0.049),
 for {'selector__direction': 'forward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 7}
INFO:Classification: precision: 0.470 (±0.080),
 recall: 0.470 (±0.080),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 4}
INFO:Classification: precision: 0.473 (±0.076),
 recall: 0.473 (±0.076),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 5}
INFO:Classification: precision: 0.463 (±0.071),
 recall: 0.463 (±0.071),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 6}
INFO:Classification: precision: 0.455 (±0.067),
 recall: 0.455 (±0.067),
 for {'selector__direction': 'backward', 'selector__estimator': SVC(), 'selector__n_features_to_select': 7}
INFO:Classification: precision: 0.445 (±0.064),
 recall: 0.445 (±0.064),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 3}
INFO:Classification: precision: 0.470 (±0.062),
 recall: 0.470 (±0.062),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 4}
INFO:Classification: precision: 0.472 (±0.067),
 recall: 0.472 (±0.067),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 5}
INFO:Classification: precision: 0.470 (±0.057),
 recall: 0.470 (±0.057),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 6}
INFO:Classification: precision: 0.475 (±0.052),
 recall: 0.475 (±0.052),
 for {'selector__direction': 'backward', 'selector__estimator': KNeighborsClassifier(), 'selector__n_features_to_select': 7}
INFO:Classification: 
The selected final model is the one with the highest recall and precision.
Selected Model:
mean_score_time                                                       0.005213
mean_test_recall_micro                                                   0.475
std_test_recall_micro                                                  0.05244
mean_test_precision_micro                                                0.475
std_test_precision_micro                                               0.05244
rank_test_recall_micro                                                       1
rank_test_precision_micro                                                    1
params                       {'selector__direction': 'backward', 'selector_...
Name: 30, dtype: object
INFO:Classification: Feature Selection Duration: ~3 minutes
INFO:Classification: Optimal Features: ['mav', 'rms', 'wl', 'zc', 'wa', 'hj_a', 'hj_c']
INFO:Classification: Out of the previously selected models, we keep all the
models within one standard deviation of the highest recall model:
INFO:Classification: precision: 0.478 (±0.054),
 recall: 0.478 (±0.054),
 for {'classifier': SVC(), 'classifier__C': 10.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 'scale', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.478 (±0.054),
 recall: 0.478 (±0.054),
 for {'classifier': SVC(), 'classifier__C': 10.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 'scale', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.473 (±0.077),
 recall: 0.473 (±0.077),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 'scale', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.492 (±0.073),
 recall: 0.492 (±0.073),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 'scale', 'classifier__kernel': 'linear'}
INFO:Classification: precision: 0.480 (±0.062),
 recall: 0.480 (±0.062),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 'auto', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.492 (±0.073),
 recall: 0.492 (±0.073),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 'auto', 'classifier__kernel': 'linear'}
INFO:Classification: precision: 0.492 (±0.073),
 recall: 0.492 (±0.073),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 0.001, 'classifier__kernel': 'linear'}
INFO:Classification: precision: 0.492 (±0.073),
 recall: 0.492 (±0.073),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 0.0001, 'classifier__kernel': 'linear'}
INFO:Classification: precision: 0.473 (±0.077),
 recall: 0.473 (±0.077),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 'scale', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.492 (±0.073),
 recall: 0.492 (±0.073),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 'scale', 'classifier__kernel': 'linear'}
INFO:Classification: precision: 0.480 (±0.062),
 recall: 0.480 (±0.062),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 'auto', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.492 (±0.073),
 recall: 0.492 (±0.073),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 'auto', 'classifier__kernel': 'linear'}
INFO:Classification: precision: 0.492 (±0.073),
 recall: 0.492 (±0.073),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 0.001, 'classifier__kernel': 'linear'}
INFO:Classification: precision: 0.492 (±0.073),
 recall: 0.492 (±0.073),
 for {'classifier': SVC(), 'classifier__C': 100.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 0.0001, 'classifier__kernel': 'linear'}
INFO:Classification: precision: 0.505 (±0.077),
 recall: 0.505 (±0.077),
 for {'classifier': SVC(), 'classifier__C': 1000.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 'auto', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.505 (±0.077),
 recall: 0.505 (±0.077),
 for {'classifier': SVC(), 'classifier__C': 1000.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 'auto', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.487 (±0.069),
 recall: 0.487 (±0.069),
 for {'classifier': SVC(), 'classifier__C': 10000.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 'auto', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.490 (±0.064),
 recall: 0.490 (±0.064),
 for {'classifier': SVC(), 'classifier__C': 10000.0, 'classifier__decision_function_shape': 'ovr', 'classifier__gamma': 0.001, 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.487 (±0.069),
 recall: 0.487 (±0.069),
 for {'classifier': SVC(), 'classifier__C': 10000.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 'auto', 'classifier__kernel': 'rbf'}
INFO:Classification: precision: 0.490 (±0.064),
 recall: 0.490 (±0.064),
 for {'classifier': SVC(), 'classifier__C': 10000.0, 'classifier__decision_function_shape': 'ovo', 'classifier__gamma': 0.001, 'classifier__kernel': 'rbf'}
INFO:Classification: 
The selected final model is the one with the highest recall and precision.
Selected Model:
mean_score_time                                                       0.005336
mean_test_recall_micro                                                   0.505
std_test_recall_micro                                                 0.077298
mean_test_precision_micro                                                0.505
std_test_precision_micro                                              0.077298
rank_test_recall_micro                                                       1
rank_test_precision_micro                                                    1
params                       {'classifier': SVC(), 'classifier__C': 1000.0,...
Name: 82, dtype: object
INFO:Classification: Model + Hyperparameter Selection Duration: ~2 minutes
INFO:Classification: Best estimator: Pipeline(steps=[('classifier', SVC(C=1000.0, gamma='auto'))], verbose=True)
INFO:Classification: Best params: {'memory': None, 'steps': [('classifier', SVC(C=1000.0, gamma='auto'))], 'verbose': True, 'classifier': SVC(C=1000.0, gamma='auto'), 'classifier__C': 1000.0, 'classifier__break_ties': False, 'classifier__cache_size': 200, 'classifier__class_weight': None, 'classifier__coef0': 0.0, 'classifier__decision_function_shape': 'ovr', 'classifier__degree': 3, 'classifier__gamma': 'auto', 'classifier__kernel': 'rbf', 'classifier__max_iter': -1, 'classifier__probability': False, 'classifier__random_state': None, 'classifier__shrinking': True, 'classifier__tol': 0.001, 'classifier__verbose': False}
INFO:Classification:
              precision    recall  f1-score   support

           0       0.27      0.35      0.30        20
           1       0.27      0.20      0.23        20
           2       0.63      0.60      0.62        20
           3       0.45      0.50      0.48        20
           4       0.33      0.30      0.32        20

    accuracy                           0.39       100
   macro avg       0.39      0.39      0.39       100
weighted avg       0.39      0.39      0.39       100

INFO:Classification: Finished
